name: Deploy New Docker Container

on:
  push:
    branches:
      - dev-webspidest

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Add server's public key to known_hosts
      - name: Add server public key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Set up SSH key for server connection
      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 5: Get short Git commit ID
      - name: Get short Git commit ID
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 6: SSH into server and clean up old containers
      - name: Clean up old Docker containers
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/pesantech/projects/web-spidest
            docker compose down
            docker system prune -af
          EOF

      # Step 7: Ensure the server code is up to date with GitHub
      - name: Pull latest code from GitHub on the server
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/pesantech/projects/web-spidest
            git pull origin dev-webspidest
          EOF

      # Step 8: Build and Push New Docker Image
      - name: Build and Push New Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/php-app-spidest:${{ env.COMMIT_ID }} -t ${{ secrets.DOCKER_USERNAME }}/php-app-spidest:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app-spidest:${{ env.COMMIT_ID }}
          docker push ${{ secrets.DOCKER_USERNAME }}/php-app-spidest:latest

      # Step 9: SSH into server and deploy new containers
      - name: Deploy New Containers
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /home/pesantech/projects/web-spidest
            echo "IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/php-app-spidest:${{ env.COMMIT_ID }}" >> .env
            docker compose up -d
          EOF

      # Step 10: Clean up SSH private key
      - name: Clean up SSH private key
        run: |
          rm -f private_key.pem
        if: always()

      # Step 11: Clean up known_hosts file
      - name: Clean up known_hosts file
        run: |
          rm -f ~/.ssh/known_hosts
        if: always()
